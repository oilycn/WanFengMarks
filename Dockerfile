
# Stage 1: Builder - Build the Next.js application
FROM node:20-alpine AS builder
WORKDIR /app

# Set environment variables for the build stage
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Copy package.json and lock file
# Using package*.json to catch package.json and package-lock.json (or yarn.lock, pnpm-lock.yaml)
COPY package*.json ./

# Install dependencies
# Consider using `npm ci` for faster, more reliable builds if you have a package-lock.json
RUN npm install

# Copy the rest of the application source code
# This includes your 'public' directory, 'src', etc.
COPY . .

# Build the Next.js application
# The `standalone` output mode will create a .next/standalone directory
RUN npm run build


# Stage 2: Runner - Create the final production image
FROM node:20-alpine AS runner
WORKDIR /app

# Set environment variables for the runtime stage
ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1
ENV PORT=3000

# Create a non-root user and group for security
# Using -S for system user/group which don't get a home directory
RUN addgroup -S --gid 1001 nodejs
RUN adduser -S --uid 1001 -G nodejs nextjs

# Copy the standalone Next.js server output
# These files are specifically generated by `output: 'standalone'`
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./

# Copy the public folder from the builder stage
# This directory should contain your static assets like images, fonts, etc.
# If this step fails with "not found", ensure 'public' directory exists at your project root
# and is named 'public' (lowercase) and wasn't excluded by .dockerignore.
COPY --from=builder --chown=nextjs:nodejs /app/public ./public

# Copy the static assets from .next/static (needed for client-side JS, CSS, images built by Next.js)
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Set the user for running the application
USER nextjs

# Expose the port the app runs on
EXPOSE 3000

# Command to run the application
# server.js is the entrypoint for the standalone output
CMD ["node", "server.js"]
